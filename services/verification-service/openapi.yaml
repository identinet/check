# OpenAPI Specification Explained: https://learn.openapis.org/specification/
# Documentation: https://spec.openapis.org/oas/v3.1.1.html
# Learning OpenAPI: https://redoc.ly/docs/resources/learning-openapi/
# HTTP status codes: https://en.wikipedia.org/wiki/List_of_HTTP_status_codes
# HTTP methods: https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol#Request_methods
openapi: 3.1.1
info:
  version: "0.0.1"
  title: Verification Service
  description: Verification Service
  license:
    name: Apache-2.0
  contact:
    name: Jan Christoph Ebersbach
    url: https://identinet.io
    email: support@identinet.io

servers:
  - url: http://localhost:3010
    description: Local development server

paths:
  /v1/verification:
    get:
      operationId: getVerification
      tags:
        - verification
      summary: Verifies a URL based on the did:web method
      description: |
        Resolves the DID document at the given URL.
        See https://w3c-ccg.github.io/did-method-web/#read-resolve.
        The verification result of the DID document and the included Linked Verifiable Presentations is returned.
      parameters:
        - name: url
          in: query
          description: |
            URL to verify.
            MUST be a HTTPS URL.
            If no path has been specified in the URL, `/.well-known` is appended.
            `/did.json` is appended to complete the URL in any case.
          example: https://www.identinet.com
          required: true
          schema:
            type: string
            format: url
      responses:
        "200":
          description: URL verified.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum:
                      - OK
                      - NOT_VERIFIED
                      - ERROR
                    description: >
                      Verification result:
                        * `OK` - Verification successful
                        * `NOT_VERIFIED` - Verification failed
                        * `ERROR` - Verification not possible, e.g. due to timeout
                    example: "OK"

        "400":
          description: Bad request
