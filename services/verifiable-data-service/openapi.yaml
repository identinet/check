# OpenAPI Specification Explained: https://learn.openapis.org/specification/
# OpenAPI Specification: https://swagger.io/specification/
# Documentation: https://spec.openapis.org/oas/v3.1.1.html
# Learning OpenAPI: https://redoc.ly/docs/resources/learning-openapi/
# Learning JSON-Schema: https://www.learnjsonschema.com/
# HTTP status codes: https://en.wikipedia.org/wiki/List_of_HTTP_status_codes
# HTTP methods: https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol#Request_methods
# Graphical editor and test service: https://editor-next.swagger.io/
openapi: 3.1.1
info:
  version: "0.0.1"
  title: Verifiable Data Service
  description: Verifiable Data Service
  license:
    name: Apache-2.0
  contact:
    name: identinet GmbH
    url: https://identinet.io
    email: support@identinet.io

servers:
  - url: http://localhost:3020
    description: Local development server
  - url: https://demo-shop.vds.check.identinet.io
    description: Demo shop deployment

tags:
  - name: openid4vp-wallet
    description: OpenID4VP Operations used by Wallets
  - name: openid4vp-verifier
    description: OpenID4VP Operations used by Verifiers

paths:
  /v1/authrequests:
    post:
      tags:
        - openid4vp-verifier
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          description: Client bearer token
          required: true
        - name: nonce
          in: query
          required: true
          description: Nonce value that becomes part of the authorization request sent to the client
          schema:
            $ref: "#/components/schemas/Nonce"
      operationId: createRequest
      summary: Creates a new OpenID4VP Authorization Request. See https://openid.net/specs/openid-4-verifiable-presentations-1_0-20.html#section-11.5.
      description: Returns Authorization Request transaction ID and request URI for submitting the response. The authorization URI needs to be extended with the nonce generated on the side of the verifier.
      # requestBody: # TODO: maybe allow the client to define the presentation definition
      responses:
        "201":
          description: Session created, returns session details.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthorizationRequest"
        "401":
          description: Unauthorized.

  /v1/authrequests/{requestId}:
    get:
      tags:
        - openid4vp-verifier
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          description: Client bearer token
          required: true
        - name: requestId
          in: path
          required: true
          description: Authorization Request ID
          schema:
            $ref: "#/components/schemas/RequestId"
      operationId: getResponse
      summary: Retrieves the submitted OpenID4VP data.
      description: Returns the submitted data and the verification result.
      responses:
        "200":
          description: Submitted data and verification result.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthRequestObjectResponse"
        "204":
          description: No content has been submitted, yet.
        "401":
          description: Unauthorized.

  /v1/authorize/{requestId}:
    parameters:
      - name: requestId
        in: path
        required: true
        description: Authorization Request ID.
        schema:
          $ref: "#/components/schemas/RequestId"
    get:
      tags:
        - openid4vp-wallet
      operationId: getRequest
      summary: Retrieves the OpenID4VP Authorization Request.
      description: Returns the OpenID4VP Authorization Request. Usually used by the wallet.
      responses:
        "200":
          description: Returns Authorization Request, see https://openid.net/specs/openid-4-verifiable-presentations-1_0-20.html#name-authorization-request
          content:
            application/json:
              schema:
                type: object
    post:
      tags:
        - openid4vp-wallet
      operationId: submitResponse
      summary: Accepts data for this Authorization Request
      description: Accepts data for this Authorization Request, see https://openid.net/specs/openid-4-verifiable-presentations-1_0-20.html#name-response
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            examples:
              submission:
                description: See https://openid.net/specs/openid-4-verifiable-presentations-1_0-20.html#section-6.2
                value:
                  {
                    vp_token: "..data",
                    presentation_submission: { more: data },
                  }
      responses:
        "200":
          description: Data submission successful. Returns redirect to callback URL.
          content:
            application/json:
              schema:
                type: object
                required:
                  - redirect_uri
                properties:
                  redirect_uri:
                    type: string
                    format: uri
              example: |
                {
                  "redirect_uri": "https://client.example.org/callback#response_code=091535f699ea575c7937fa5f0f454aee"
                }
        "400":
          description: Bad Request.

components:
  schemas:
    RequestId:
      type: string
      format: uuid
      description: Id of the authorization request
      example: 777cab68-3666-4bcb-be11-8f264dc6fa1b

    Nonce:
      type: string
      description: Nonce value that becomes part of the authorization request sent to the client
      example: RBx289XF4nCK9Cu6Tx08efcBELwjqQYc6HNORJCE

    AuthorizationRequest:
      type: object
      properties:
        id:
          schema:
            $ref: "#/components/schemas/RequestId"
        url:
          type: string
          format: uri
          description: URL to respond to the request, usually passed to wallet via QRCode or link.
          example: openid4vp://?client_id=did:web:example.com&request_uri=https://example.com/v1/authorize/777cab68-3666-4bcb-be11-8f264dc6fa1b
      required:
        - id
        - url

    AuthRequestObjectResponse:
      type: object
      properties:
        nonce:
          schema:
            $ref: "#/components/schemas/Nonce"
        vp_token:
          type: string
          description: Submitted Verifiable Presentation
        presentation_submission:
          type: Object
          description: Presentation Submission that describes how to decode the presentation
        status:
          type: object
          description: Status information about the state of the request
          examples:
            error:
              description: Error
              value: { cause: "Cause of error" }
            failure:
              description: Failure
              value: { reason: "Reason for failure" }
            success:
              description: Success
              value: { info: { more: data } }
      required:
        - nonce
        - vp_token
        - presentation_submission
        - status
