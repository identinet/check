#!/usr/bin/env -S just --justfile
# Documentation: https://just.systems/man/en/
# Documentation: https://www.nushell.sh/book/

import '../../justlib/lib.just'

DIST_FOLDER := "dist"

# Print this help
default:
    @just -l

# Installs dependencies
[group('development')]
install: githooks
    deno install --frozen --lock

alias d := dev

# Continuously run and build application for development purposes
[group('development')]
dev: install
    #!/usr/bin/env nu
    # Sometime vinxi crashes, run it in a loop to work around this issue
    while true { do -i { deno task dev }; sleep 1sec }

# Start local redis instance
[group('development')]
dev-redis: install
    valkey-server

alias o := open

# Open URL in browser.
[group('development')]
open:
    #!/usr/bin/env nu
    deno run -A npm:open-cli $"https://($env.EXTERNAL_HOSTNAME)"

alias b := build

# Build release version of application
[group('development')]
build: install
    deno task build

alias p := preview

# Preview the build
[group('development')]
preview: build
    deno task preview

alias l := lint

# Lint code
[group('linter')]
lint: githooks
    deno lint

alias lf := lint-fix

# Lint code and fix issues
[group('linter')]
lint-fix: githooks
    deno lint --fix

# Update dependencies
[group('development')]
update-deps: githooks
    deno outdated --update --latest

_bump_files CURRENT_VERSION NEW_VERSION:
    #!/usr/bin/env nu
    # let manifest = (open manifest.json)
    open manifest.json | upsert version "{{ NEW_VERSION }}" | save -f manifest.json; git add manifest.json
    open package.json | upsert version "{{ NEW_VERSION }}" | save -f package.json; git add package.json

alias c := clean

# Clean build folder
[group('development')]
clean:
    @rm -rvf "{{ DIST_FOLDER }}" app.config.timestamp*.js
